Functions

Structure:
-> Introduction
-> Using Functions

Introduction

Functions are reusable blocks of code that carry out a specific task. To execute the code in a function you call it. A function can be passed arguments to use, and a function may refurn a value to whatever called it.

In fact, JavaScript has a great many built-in functions like write(), alert(), getElementById(), random(), floor(), and several others. Wherever you spot a pair of round brackets there's likely a function in action.

A function is a way of packaging your JavaScript commands so you can easily reuse them every time you need the same piece of functionality implemented in your website.

This suggests that there are 2 distinct phases to a function:
The phase where the function is declared (Created).
The phase where the function is called (used).

Using Functions

The basic structure of a JavaScript function looks like this:
// keyword function followed by your
// chosen name for the function
// Don't forget the round brackets!

// the code block is inside curly braces
function functionName() {
    // code you want to run goes here
}

Call a funcntion

Once you put a block of code into a function, you can use it anywhere you need that functionality in your website. What you need to do is just call the function.

You do this by typing the function name followed by brackets and the function will do its job - just like you did with alert(). Here's how it's done:

// Type the function name (without the keyword function)
// Don't forget the round brackets!

functionName();

Prepare a simple HTML page like the one below. The program we're going to build has the following goals:

-> to get today's date dynamically when the user clicks a button;
-> to display today's date on the web page;
-> to change the value attribute of the button after it's clicked: to have the button still displaying Get Date after the date has been displayed looks a bit confusing to the user.

<!DOCTYPE htmb>
<html>
    <head>
        <title-Declare a function</title>
    </head>
    <body>
        <h1>Declare a functions</h1>
        <div>
            <h2>Today's date is : </h2>
            <span id="calendar"></span>
            <input type="button" id="myButton" value="Get Date" />
        </div>

        <script type="text/javascript>
        // Declare your function here

        function showDate() {
            // the block of code starts here:
            // First get all your vars ready
            // This is how JavaScript retrieves today's date

            var today = new Date():
            // get hold of the calendar span element
            // where today's date will be inserted
            var myCalendar = document.getElementById("calendar");
            // get hold of the button:you need this when it comes
            // to change its value attribute
            var myButton = document.getElementById("myButton");
            // insert the date in the span element
            // toDateString() changes the date just retrieved
            // into a user-friendly format for display
            myCalendar.innerHTML = today.toDateString():
            // change the value attribute of the button
            // to say something more appropriate once the date is displayed
            myButton.value = "Well done!";
        }
        </script>
    </body>
</html>

Summary
Functions makes program modular.
Functions are objects.
retum keyword is used to return a value from function.