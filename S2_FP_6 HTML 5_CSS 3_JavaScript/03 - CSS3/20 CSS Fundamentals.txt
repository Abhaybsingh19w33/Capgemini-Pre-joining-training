CSS3

Structure:
-> Introduction to CSS3
-> Advantages of CSS3
-> Hello World Example
-> CSS Syntax
-> Selectors

Introduction to CSS3
CSS is the acronym for. "Cascading Style Sheets. CSS provides styling to your web pages. CSS is a simple design language intended to simplify the process of making web pages presentable. CSS handles the look and feel part of a web page. Using CSS, you can control the color of the text, the style of fonts, the spacing between paragraphs, how columns are sized and laid out, what background images or colors are used, layout designs, variations in display for different devices and screen sizes as well as a variety of other effects.

CSS is a style sheet language used for describing the look and formatting of a document written in a markup language. Although most often used to change the style of web pages and user interfaces writen in HTML and XHTML, the language can be applied to any kind of XML document, including plain XML, SVG and XUL Along with HTML and JavaScript, CSS is a cornerstone technology used by most websites to create visually engaging webpages, user interfaces for web applications, and user interfaces for many mobile applications.

CSS is designed primarily to enable the separation of document content from document presentation, including elements such as the layout, colors, and fonts. This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics, enable multiple HTML pages to share formating by speciftying the relevant CSS in a separate .css file, and reduce complexity and repetition in the structural content, such as semantically insignificant tables that were widely used to format pages before consistent CSS rendering was available in all major browsers.

Advantages of CSS3

a. CSS saves time - You can write CSS once and then reuse same sheet in multiple HTML pages

b. Pages load faster - If you are using CSS, you do not need to write HTML tag attributes every time.

C. Easy maintenance - To make a global change, simply change the style, and all elements in all the web pages will be updated automatically.

d. Superior styles to HTML CSS has a much wider array of attributes than HTML, So you can give a far better look to your HTML page in comparison to HTML attributes.

e. Multiple Device Compatibility - Style sheets allow content to be optimized for more than one type of device.

f. Global web standards - Now HTML attributes are being deprecated and it is being recommended to use CSS.

g. Offline Browsing - CSS can store web applications locally with the help of an offline cache.

h. Platform Independence - The Script offer consistent platfom independence and can support latest browsers as well

Hello World Example

<style type="text/css">
    h1 {
        color: DeepSkyBlue
    }
</style>

<h1>Hello, worid!<h1>

We just wrote a CSS rule, targeted toward the H1 tag and used it to change the text color, using the color property and a color value called DeepSkyBlue.

CSS syntax

A CSS comprises of style rules that are interpreted by the browser and then applied to the corresponding elements in your document. A style rule is made of three parts -

Selector - A selector is an HTML tag at which a style will be applied. This could be any tag like <h1> or <stable> etc.

Property - A property is a type of attribute of HTML tag. Put simply, all the HTML attributes are converted into CSS propertes. They could be color, border etc.

Value - Values are assigned to properties. For example, color property can have value either red or #F1F1F1 etc.

Example

selector { property: value }

table { border : 1px solid #C00; }

Here table is a selector and border is a property and given value 1px solid #C00 is the value of that property.

Selectors

Type Selector

h1 {
    color: #36CFFF;
}

Universal selector: Applies to all selector

* {
    color: #36CFFF;
}

Dependency Selector : style rule will apply to <em> element only when it lies inside <ul> tag.

ul em {
    color: #000000;
}

The Class Selectors : style rules based on the class attribute of the elements.

.black {
    color: #000000;
}

This rule renders the content in black for every element with class attribute set to black in our document. You can make it a bit more particular. For example:

h1.black {
    color: #000000;
}

This rule renders the content in black for only <h1> elements with class attribute set to black.

ID Selectors

You can define style rules based on the id attribute of the elements.

#black {
    color: #000000;
}

This rule renders the content in black for every element with id attribute set to black in our document You can make it a bit more particular. For example-

h1#black {
    color: #000000;
}

This rule renders the content in black for only <h1> elements with id atribute set to black.

The true power of id selectors is when they are used as the foundation for descendant selectors. For example:

#black h2 {
    color: #000000;
}

The Child Selectors

body > p {
    color: #000000;
}

This rule will render all the paragraphs in black if they are direct child of <body> element. Other paragraphs put inside other elements like <div> or <td> would not have any effect of this rule.

Multiple Style Rules

h1 {
    color: #36C;
    font-weight: normal;
    letter-spacing: .4em;
    margin-bottom: 1em;
    text-transform: lowercase;
}

Here all the property and value pairs are separated by a semi colon (;). You can keep them in a single line or multiple lines. For better readability we keep them into separate lines.

Summary
CSS makes a web page presentable
CSS works using Box Model.