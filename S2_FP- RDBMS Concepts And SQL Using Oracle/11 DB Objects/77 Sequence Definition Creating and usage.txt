Table of Contents
1. Database Sequences
1.1 Syntax
1.2 Example
3. Summary

Introduction
This module introduces us to the definition, creation and usage of database sequences.

Learning Objectives
Upon completion of this module, you will be able to:
-> Create and use database sequences in SQL

1. Database Sequences

Database sequence is a database object from which users can generate unique values. Sequences can be used to automatically generate primary key values.

When a sequence number is generated, the sequence is incremented, independent of the transaction committing or rolling back.

Sequence can be created using CREATE SEQUENCE statement. After a sequence is created, its value can be accessed in SQL statements with the CURRVAL pseudocolumn, which returns the current value of the sequence, or the NEXTVAL pseudocolumn, which increments the sequence and returns the new value.

1.1 Syntax

The syntax for creating sequence is as follows:

CREATE SEQUENCE <sequence name>
START WITH <integer>
INCREMENT BY<integer>
MINVALUE <integer>
MAXVALUE <integer>
CACHE/NOCACHE
CYCLE/NOCYCLE;

START WITH defines the first number that the sequence will generate. Default is 1.

INCREMENT BY defines the size of increase or decrease in value generated by the sequence. Using a negative value defines a decreasing sequence.

MINVALUE defines the lowest value the sequence will generate. Default is 1 for increasing sequence.

MAXVALUE defines the largest number the sequence will generate. Default is NOMAXVALUE for an increasing sequence.

CYCLE configures the sequence to repeat numbers after reaching the maximum or minimum value.

NOCYCLE configures the sequence to not repeat numbers after reaching the bounding value.

NOCACHE forces data dictionary to be updated for each sequence.

1.2 Example

The following statement creates the sequence empno_seq. This sequence could be used to provide employee id's when rows are added to the employees or emp table.

CREATE SEQUENCE empno_seq
START WITH 1000
INCREMENT BY 1
NOCACHE
NOCYCLE;

The first reference to empno_seq.NEXTVAL returns 1000. The second retums 1001. Each subsequent reference will returm a value 1 greater than the previous reference.

Sequence can be used in an INSERT statement as below.

INSERT INTO emp
VALUES( empno_seq.NEXTVAL, 'KING','PRESIDENT', null,
to_date('17-11-1961', 'dd-mm-yyyy'), 5000,
null, 10)

Sequence can also be used in a SELECT statement. Following statement displays the current value of the sequence.

SELECT empno_seq.cuRRVAL FROM DUAL;

Note that in order to use sequence.CURRVAL in a session, the sequendce has to be initialised using sequence.NEXTVAL.

Following statement drops a sequence.

DROP SEQUENCE empnso_seq;

3. Summary

-> Sequence is a database object from which users can generate unique values Sequences can be used to automatically generate primary key values.